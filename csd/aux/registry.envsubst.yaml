# registries configuration
modules:
  - name: schema-registry
    className: com.hortonworks.registries.schemaregistry.webservice.SchemaRegistryModule
    config:
      schemaProviders:
        - providerClass: "com.hortonworks.registries.schemaregistry.avro.AvroSchemaProvider"
          defaultSerializerClass: "com.hortonworks.registries.schemaregistry.serdes.avro.AvroSnapshotSerializer"
          defaultDeserializerClass: "com.hortonworks.registries.schemaregistry.serdes.avro.AvroSnapshotDeserializer"
      # schema cache properties
      # inmemory schema versions cache size
      schemaCacheSize: 10000
      # inmemory schema version cache entry expiry interval after access
      schemaCacheExpiryInterval: 3600

servletFilters:
# - className: "com.hortonworks.registries.auth.server.AuthenticationFilter"
#   params:
#     type: "kerberos"
#     kerberos.principal: "${HWX_REGISTRY_HTTP_PRINCIPAL}"
#     kerberos.keytab: "${CONF_DIR}/${USER}.keytab"
#     kerberos.name.rules: "RULE:[2:$1@$0]([jt]t@.*EXAMPLE.COM)s/.*/$MAPRED_USER/ RULE:[2:$1@$0]([nd]n@.*EXAMPLE.COM)s/.*/$HDFS_USER/DEFAULT"
 - className: "com.hortonworks.registries.schemaregistry.webservice.RewriteUriFilter"
   params:
     # value format is [<targetpath>,<paths-should-be-redirected-to>,*|]*
     # below /subjects and /schemas/ids are forwarded to /api/v1/confluent
     forwardPaths: "/api/v1/confluent,/subjects/*,/schemas/ids/*"
     redirectPaths: "/ui/,/"

# Filesystem based jar storage
fileStorageConfiguration:
  className: "com.hortonworks.registries.common.util.LocalFileSystemStorage"
  properties:
    directory: ${HWX_REGISTRY_STORAGE_LOCATION}/jar

#swagger configuration
swagger:
  resourcePackage: com.hortonworks.registries.schemaregistry.webservice

#enable CORS, may want to disable in production
enableCors: false

server:
  applicationConnectors:
    - type: http
      port: ${HWX_REGISTRY_PORT}

# Logging settings.
logging:
  level: ${HWX_REGISTRY_LOG_THRESHOLD}
  loggers:
    com.hortonworks.registries: ${HWX_REGISTRY_LOG_THRESHOLD}
  appenders:
    - type: console
      threshold: ${HWX_REGISTRY_LOG_THRESHOLD}
      logFormat: "${HWX_REGISTRY_LOG_CONSOLE_FORMAT}"
    - type: file
      threshold: ${HWX_REGISTRY_LOG_THRESHOLD}
      currentLogFilename: ${HWX_REGISTRY_LOG_DIR}/${HWX_REGISTRY_LOG_FILE}
      #If this maxFileSize is set, then dropwizard.io is not creating the logfile
      #maxFileSize: ${HWX_REGISTRY_LOG_FILE_SIZE}
      archive: true
      archivedLogFilenamePattern: ${HWX_REGISTRY_LOG_DIR}/${HWX_REGISTRY_LOG_FILE}.%d
      archivedFileCount: ${HWX_REGISTRY_LOG_FILE_COUNT}
      timeZone: UTC
      logFormat: "${HWX_REGISTRY_LOG_FILE_FORMAT}"
