# registries configuration
modules:
  - name: schema-registry
    className: com.hortonworks.registries.schemaregistry.webservice.SchemaRegistryModule
    config:
      schemaProviders:
        - providerClass: "com.hortonworks.registries.schemaregistry.avro.AvroSchemaProvider"
          defaultSerializerClass: "com.hortonworks.registries.schemaregistry.serdes.avro.AvroSnapshotSerializer"
          defaultDeserializerClass: "com.hortonworks.registries.schemaregistry.serdes.avro.AvroSnapshotDeserializer"
      # schema cache properties
      # inmemory schema versions cache size
      schemaCacheSize: 10000
      # inmemory schema version cache entry expiry interval after access
      schemaCacheExpiryInterval: 3600

# Filesystem based jar storage
fileStorageConfiguration:
  className: "com.hortonworks.registries.common.util.LocalFileSystemStorage"
  properties:
    directory: ${HWX_REGISTRY_STORAGE_LOCATION}/jar

#swagger configuration
swagger:
  resourcePackage: com.hortonworks.registries.schemaregistry.webservice

#enable CORS, may want to disable in production
enableCors: false

# Logging settings.
logging:
  level: ${HWX_REGISTRY_LOG_THRESHOLD}
  loggers:
    com.hortonworks.registries: ${HWX_REGISTRY_LOG_THRESHOLD}
  appenders:
    - type: console
      threshold: ${HWX_REGISTRY_LOG_THRESHOLD}
      logFormat: "${HWX_REGISTRY_LOG_CONSOLE_FORMAT}"
    - type: file
      threshold: ${HWX_REGISTRY_LOG_THRESHOLD}
      currentLogFilename: ${HWX_REGISTRY_LOG_DIR}/${HWX_REGISTRY_LOG_FILE}
      #If this maxFileSize is set, then dropwizard.io is not creating the logfile
      #maxFileSize: ${HWX_REGISTRY_LOG_FILE_SIZE}
      archive: true
      archivedLogFilenamePattern: ${HWX_REGISTRY_LOG_DIR}/${HWX_REGISTRY_LOG_FILE}.%d
      archivedFileCount: ${HWX_REGISTRY_LOG_FILE_COUNT}
      timeZone: UTC
      logFormat: "${HWX_REGISTRY_LOG_FILE_FORMAT}"
