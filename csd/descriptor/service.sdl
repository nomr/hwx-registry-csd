{
  "name": "NIFI",
  "label": "NiFi",
  "description": "Apache's NiFi service. <span class=\"error\">Requires Java 8.</span>",

  "version": "0.1.0",

  "compatibility" : {
    "cdhVersion" : {
      "min": "5.7.0",
      "max": "5"
    }
  },

  "runAs": {
    "user": "nifi",
    "group": "nifi",
    "principal": "nifi"
  },

  "maxInstances": 1,

  "icon": "images/icon.png",

  "parcel": {
    "repoUrl" : "https://github.com/nomr/nifi-parcel/releases/download/v1.4.0+nifi0.1.2",
    "requiredTags": [
      "nifi"
    ]
  },

  "serviceDependencies": [
    {
      "name": "ZOOKEEPER",
      "required": "true"
    }
  ],

  "inExpressWizard" : false,

  "parameters": [
    {
      "name": "java_home",
      "label": "Java 8 Home",
      "description": "Path to Java 8",
      "configName": "java.home",
      "required": true,
      "configurableInWizard": true,
      "default": "/usr/java/jdk1.8.0_121",
      "type": "path",
      "pathType": "serviceSpecific"
    },
    {
      "name": "nifi_home",
      "label": "NiFi Home directory",
      "description": "NiFi's service instance home directory",
      "required": true,
      "configurableInWizard": true,
      "default": "/var/run/nifi",
      "type": "path",
      "pathType": "localDataDir",
      "mode": "0750"
    }
  ],

  "roles": [
    {
      "name": "NIFI_SERVER",
      "label": "NiFi Server",
      "pluralLabel": "NiFi Servers",
      "startRunner": {
        "program": "scripts/control.sh",
        "args": [ "run" ],
        "environmentVariables" : {
          "JAVA_HOME": "${java_home}",
          "NIFI_HOME": "${nifi_home}",
          "NIFI_PID_DIR": "${nifi_home}",
          "NIFI_LOG_DIR": "/var/log/nifi"
        }
      },
      "stopRunner": {
        "program": "scripts/control.sh",
        "args": [ "stop" ],
        "environmentVariables" : {
          "JAVA_HOME": "${java_home}",
          "NIFI_HOME": "${nifi_home}",
          "NIFI_PID_DIR": "${nifi_home}",
          "NIFI_LOG_DIR": "/var/log/nifi"
        }
      },
      "topology": {
        "minInstances": "1",
        "softMinInstances": "3"
      },
      "logging": {
        "dir": "/var/log/nifi",
        "filename": "nifi.log",
        "modifiable": true,
        "loggingType": "logback",
        "additionalConfigs": [
          { "key": "1", "value": "<contextListener class=\"ch.qos.logback.classic.jul.LevelChangePropagator\"><resetJUL>true</resetJUL></contextListener>"},
          { "key": "1", "value": "<logger name=\"org.apache.nifi\" level=\"INFO\"/>" },
          { "key": "1", "value": "<logger name=\"org.apache.nifi.processors\" level=\"WARN\"/>" },
          { "key": "1", "value": "<logger name=\"org.apache.nifi.processors.standard.LogAttribute\" level=\"INFO\"/>" },
          { "key": "1", "value": "<logger name=\"org.apache.nifi.processors.standard.LogMessage\" level=\"INFO\"/>" },
          { "key": "1", "value": "<logger name=\"org.apache.nifi.controller.repository.StandardProcessSession\" level=\"WARN\" />" },

          { "key": "1", "value": "<logger name=\"org.apache.zookeeper.ClientCnxn\" level=\"ERROR\" />" },
          { "key": "1", "value": "<logger name=\"org.apache.zookeeper.server.NIOServerCnxn\" level=\"ERROR\" />" },
          { "key": "1", "value": "<logger name=\"org.apache.zookeeper.server.NIOServerCnxnFactory\" level=\"ERROR\" />" },
          { "key": "1", "value": "<logger name=\"org.apache.zookeeper.server.quorum\" level=\"ERROR\" />" },
          { "key": "1", "value": "<logger name=\"org.apache.zookeeper.ZooKeeper\" level=\"ERROR\" />" },
          { "key": "1", "value": "<logger name=\"org.apache.zookeeper.server.PrepRequestProcessor\" level=\"ERROR\" />" },
          { "key": "1", "value": "<logger name=\"org.apache.calcite.runtime.CalciteException\" level=\"OFF\" />" },

          { "key": "1", "value": "<logger name=\"org.apache.curator.framework.recipes.leader.LeaderSelector\" level=\"OFF\" />" },
          { "key": "1", "value": "<logger name=\"org.apache.curator.ConnectionState\" level=\"OFF\" />" },

          { "key": "1", "value": "<logger name=\"org.apache.nifi.cluster\" level=\"INFO\"/>" },

          { "key": "1", "value": "<logger name=\"org.apache.nifi.server.JettyServer\" level=\"INFO\"/>" },

          { "key": "1", "value": "<logger name=\"org.eclipse.jetty\" level=\"INFO\"/>" },

          { "key": "1", "value": "<logger name=\"com.sun.jersey.spi.container.servlet.WebComponent\" level=\"ERROR\"/>" },
          { "key": "1", "value": "<logger name=\"com.sun.jersey.spi.spring\" level=\"ERROR\"/>" },
          { "key": "1", "value": "<logger name=\"org.springframework\" level=\"ERROR\"/>" },

          { "key": "1", "value": "<logger name=\"com.sun.jersey.spi.inject.Errors\" level=\"ERROR\"/>" },

          { "key": "1", "value": "<logger name=\"org.apache.nifi.web.security\" level=\"INFO\" additivity=\"false\"/>" },
          { "key": "1", "value": "<logger name=\"org.apache.nifi.web.api.config\" level=\"INFO\" additivity=\"false\"/>" },
          { "key": "1", "value": "<logger name=\"org.apache.nifi.authorization\" level=\"INFO\" additivity=\"false\"/>" },
          { "key": "1", "value": "<logger name=\"org.apache.nifi.cluster.authorization\" level=\"INFO\" additivity=\"false\"/>" },
          { "key": "1", "value": "<logger name=\"org.apache.nifi.web.filter.RequestLogger\" level=\"INFO\" additivity=\"false\"/>" },

          { "key": "1", "value": "<logger name=\"org.apache.nifi.bootstrap\" level=\"INFO\" additivity=\"false\"/>" },
          { "key": "1", "value": "<logger name=\"org.apache.nifi.bootstrap.Command\" level=\"INFO\" additivity=\"false\"/>" },

          { "key": "1", "value": "<logger name=\"org.apache.nifi.StdOut\" level=\"INFO\" additivity=\"false\"/>" },

          { "key": "1", "value": "<logger name=\"org.apache.nifi.StdErr\" level=\"ERROR\" additivity=\"false\"/>" }
        ]
      },
      "configWriter": {
        "generators": [
          {
            "filename": "bootstrap.conf",
            "configFormat": "properties",
            "includedParams": [
              "bs_graceful_shutdown_seconds"
            ],
            "additionalConfigs": [
              {
                "key": "java",
                "value": "${java_home}/bin/java"
              },
              {
                "key": "notification.services.file",
                "value": "bootstrap-notification-services.xml"
              },
              {
                "key": "notification.max.attempts",
                "value": "5"
              },
              {
                "key": "run.as",
                "value": ""
              },
              {
                "key": "nifi.bootstrap.sensitive.key",
                "value": ""
              }
            ]
          },
          {
            "filename": "nifi-future.conf",
            "configFormat": "properties",
            "includedParams": [
            ],
            "additionalConfigs": [
              {
                "key": "nifi.state.management.configuration.file",
                "value": "./state-management.xml"
              },
              {
                "key": "nifi.state.management.provider.local",
                "value": "local-provider"
              },
              {
                "key": "nifi.state.management.provider.cluster",
                "value": "zk-provider"
              },
              {
                "key": "nifi.state.management.embedded.zookeeper.start",
                "value": "false"
              }
	    ]
          },
          {
            "filename": "state-management-local-provider.xml",
            "configFormat": "hadoop_xml",
            "includedParams": [
              "state_management_local_provider_directory",
              "state_management_local_provider_always_sync",
              "state_management_local_provider_partitions"
            ],
            "additionalConfigs": [
              {
                "key": "id",
                "value": "local-provider"
              },
              {
                "key": "class",
                "value": "org.apache.nifi.controller.state.providers.local.WriteAheadLocalStateProvider"
              },
              {
                "key": "Checkpoint Interval",
                "value": "${state_management_local_provider_checkpoint_interval} mins"
              },
              {
                "key": "cdh.stateManagement.provider.type",
                "value": "local-provider"
              }
            ]
          },
          {
            "filename": "state-management-zk-provider.xml",
            "configFormat": "hadoop_xml",
            "includedParams": [
              "state_management_zk_provider_root_node",
              "state_management_zk_provider_access_control"
            ],
            "additionalConfigs": [
              {
                "key": "id",
                "value": "zk-provider"
              },
              {
                "key": "class",
                "value": "org.apache.nifi.controller.state.providers.zookeeper.ZooKeeperStateProvider"
              },
              {
                "key": "Session Timeout",
                "value": "${state_management_zk_provider_session_timeout} seconds"
              },
              {
                "key": "cdh.stateManagement.provider.type",
                "value": "cluster-provider"
              }
            ]
          }
        ],
        "auxConfigGenerators": [
          {
            "filename": "bootstrap-notification-services.xml",
            "sourceFilename": "aux/bootstrap-notification-services.safety-valve-xml"
          },
          {
            "filename": "login-identity-providers.xml",
            "sourceFilename": "aux/login-identity-providers.safety-valve-xml"
          },
          {
            "filename": "state-management.xml",
            "sourceFilename": "aux/state-management.safety-valve-xml"
          }
        ]
      },
      "parameters": [
        {
          "name": "bs_graceful_shutdown_seconds",
          "label": "Graceful Shutdown (in seconds)",
          "description": "How long to wait after telling NiFi to shutdown before explicitly killing the Process",
          "configName": "graceful.shutdown.seconds",
          "required": true,
          "type": "long",
          "unit": "seconds",
          "min": 1,
          "softMin": 20,
          "default": 20
        },
        {
          "name": "state_management_local_provider_directory",
          "label": "State Management Local Provider Directory",
          "description": "The directory to store components' state in.",
          "configName": "Directory",
          "required": true,
          "configurableInWizard": true,
          "type": "path",
          "conformRegex": "/.*",
          "pathType": "localDataDir",
          "mode": "0750",
          "default": "/var/run/nifi/state/local"
        },
        {
          "name": "state_management_local_provider_always_sync",
          "label": "State Management Local Provider Always Sync",
          "description": "Always Sync - If set to true, any change to the repository will be synchronized to the disk, meaning that NiFi will ask the operating system not to cache the information. This is very expensive and can significantly reduce NiFi performance. However, if it is false, there could be the potential for data loss if either there is a sudden power loss or the operating system crashes. The default value is false.",
          "configName": "Always Sync",
          "required": true,
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "state_management_local_provider_partitions",
          "label": "State Management Local Provider Number of Partitions",
          "description": "The number of partitions.",
          "configName": "Partitions",
          "required": true,
          "type": "long",
          "min": 1,
          "default": 16
        },
        {
          "name": "state_management_local_provider_checkpoint_interval",
          "label": "State Management Local Provider Checkpoint Interval",
          "description": "The amount of time between checkpoints.",
          "required": true,
          "type": "long",
          "unit": "minutes",
          "min": 1,
          "default": 2
        },
        {
          "name": "state_management_zk_provider_root_node",
          "label": "State Management Zookeeper Provider Root Node",
          "description": "The root node in ZooKeeper where state should be stored. The default is '/nifi', but it is advisable to change this to a different value if not using if multiple NiFi instances may all be using the same ZooKeeper Server.",
          "configName": "Root Node",
          "required": true,
          "type": "path",
          "conformRegex": "/.*",
          "pathType": "serviceSpecific",
          "default": "/nifi"
        },
        {
          "name": "state_management_zk_provider_session_timeout",
          "label": "State Management Zookeeper Provider Session Timeout",
          "description": "Specifies how long this instance of NiFi is allowed to be disconnected from ZooKeeper before creating a new ZooKeeper Session.",
          "required": true,
          "type": "long",
          "unit": "seconds",
          "min": 1,
          "softMin": 10,
          "default": 30
        },
        {
          "name": "state_management_zk_provider_access_control",
          "label": "State Management Zookeeper Provider Access Control",
          "description": "Specifies which Access Controls will be applied to the ZooKeeper ZNodes that are created by this State Provider. This value must be set to one of: - Open  : ZNodes will be open to any ZooKeeper client.  - CreatorOnly  : ZNodes will be accessible only by the creator. The creator will have full access to create children, read, write, delete, and administer the ZNodes.  This option is available only if access to ZooKeeper is secured via Kerberos or if a Username and Password are set.",
          "configName": "Access Control",
          "required": true,
          "type": "string",
          "conformRegex": "Open|CreatorOnly",
          "default": "Open"
        }
      ]
    }
  ]
}
