name: HWX_REGISTRY
label: Schema Registry
description: HortonWorks Schema Registry. <span class="error">Requires Java 8.</span>
version: 0.1.0

compatibility:
  cdhVersion:
    max: '5'
    min: 5.7.0

icon: images/icon.png

inExpressWizard: false

runAs:
  user: hwx-registry
  group: hwx-registry
  principal: hwx-registry

maxInstances: 1

parcel:
  repoUrl: https://github.com/nomr/hwx-registry-parcel/releases/download/v0.4.0+registry0.0.1
  requiredTags: [hwx-registry]
  optionalTags:
  - pki

serviceDependencies:
- name: ZOOKEEPER
  required: false
- name: PKI

rolesWithExternalLinks:
- HWX_REGISTRY_SERVER

kerberos: true

commands:
- name: service_zk_init
  label: Create SchemaRegistry ZNode
  description: Create SchemaRegistry root ZNode in Zookpeer with proper ACLs.
  roleCommand: server_zk_init
  roleName: HWX_REGISTRY_SERVER
  runMode: single

- name: service_zk_drop
  label: Drop SchemaRegistry ZNode
  description: Drop SchemaRegistry root ZNode.
  roleCommand: server_zk_drop
  roleName: HWX_REGISTRY_SERVER
  runMode: single

- name: service_db_create
  label: Create SchemaRegistry Database Tables
  description: Create SchemaRegistry database tables. Will skip if any tables exist.
  roleCommand: server_db_create
  roleName: HWX_REGISTRY_SERVER
  runMode: single

- name: service_db_validate
  label: Validate SchemaRegistry Database Schema
  description: Runs validation checks on SchemaRegistry database.
  roleCommand: server_db_validate
  roleName: HWX_REGISTRY_SERVER
  runMode: single

- name: service_db_migrate
  label: Upgrade SchemaRegistry Database Schema
  description: Upgrade SchemaRegistry Database Schema. Will skip if schema is up to date.
  roleCommand: server_db_migrate
  roleName: HWX_REGISTRY_SERVER
  runMode: single

- name: service_db_repair
  label: Repair SchemaRegistry Database Schema
  description: Repairs the DATABASE_CHANGE_LOG by removing
    failed migrations and correcting checksum of existing migration script.
  roleCommand: server_db_repair
  roleName: HWX_REGISTRY_SERVER
  runMode: single

- name: service_db_drop
  label: Drop SchemaRegistry Database Tables
  description: Drop all the SchemaRegistry tables.
  roleCommand: server_db_drop
  roleName: HWX_REGISTRY_SERVER
  runMode: single


parameters:
- name: java_home
  configName: java.home
  label: Java 8 Home
  description: Path to Java 8
  required: true
  configurableInWizard: true
  type: path
  pathType: serviceSpecific
  default: /usr/java/default

roles:
- name: HWX_REGISTRY_SERVER
  label: Server
  pluralLabel: Servers
  jvmBased: 'true'

  externalLink:
    name: webserver_web_ui
    label: Registry
    url: 'https://${host}:${port}/'

  additionalExternalLinks:
  - name: webserver_web_swagger
    label: Swagger UI
    url: 'https://${host}:${port}/swagger'

  kerberosPrincipals:
  - name: HWX_REGISTRY_PRINCIPAL
    primary: ${principal}
    instance: ${host}
  - name: HWX_REGISTRY_HTTP_PRINCIPAL
    primary: HTTP
    instance: ${host}

  startRunner:
    environmentVariables: &environmentVariables
      BIGTOP_JAVA_MAJOR: 8
      LOG_DIR: '${log_dir}'
      JAVA_HOME: '${java_home}'
      REGISTRY_HEAP_OPTS: '-Xmx${jvm_heap_size}m -Xms${jvm_heap_size}m'
      REGISTRY_JVM_PERFORMANCE_OPTS: '${jvm_options}'
      HWX_REGISTRY_AUTH: '${auth_provider}'
      HWX_REGISTRY_AUTH_SIMPLE_ANON: '${auth_provider_simple_anonymous}'
      HWX_REGISTRY_AUTH_KRB_RULES: '${auth_provider_krb_rules}'
      HWX_REGISTRY_LOG_DIR: '${log_dir}'
      HWX_REGISTRY_PORT: '${port}'
      HWX_REGISTRY_SP: '${storage_provider}'
      HWX_REGISTRY_SP_DB_HOSTNAME: '${storage_provider_db_hostname}'
      HWX_REGISTRY_SP_DB_PORT: '${storage_provider_db_port}'
      HWX_REGISTRY_SP_DB_NAME: '${storage_provider_db_name}'
      HWX_REGISTRY_SP_DB_USER: '${storage_provider_db_user}'
      HWX_REGISTRY_SP_DB_PASSWORD: '${storage_provider_db_password}'
      HWX_REGISTRY_STORAGE_LOCATION: '${registry_home}'
      HWX_REGISTRY_USER: '${user}'
      HWX_REGISTRY_ZK_ROOT: '/${user}'
    program: scripts/control.sh
    args: [registry]

  commands:
  - name: server_zk_init
    label: Create SchemaRegistry ZNode
    description: Create SchemaRegistry root ZNode in Zookpeer with proper ACLs.
    expectedExitCodes: [0]
    requiredRoleState: stopped
    commandRunner:
      environmentVariables: *environmentVariables
      program: scripts/control.sh
      args: [zookeeper, create]

  - name: server_zk_drop
    label: Drop SchemaRegistry ZNode
    description: Drop SchemaRegistry root ZNode.
    expectedExitCodes: [0]
    requiredRoleState: stopped
    commandRunner:
      environmentVariables: *environmentVariables
      program: scripts/control.sh
      args: [zookeeper, drop]

  - name: server_db_create
    label: Create SchemaRegistry Database Tables
    description: Create SchemaRegistry database tables. Will skip if any tables exist.
    expectedExitCodes: [0]
    requiredRoleState: stopped
    commandRunner:
      environmentVariables: *environmentVariables
      program: scripts/control.sh
      args: [bootstrap, create ]

  - name: server_db_validate
    label: Validate SchemaRegistry Database Schema
    description: Runs validation checks on SchemaRegistry database.
    expectedExitCodes: [0]
    requiredRoleState: stopped
    commandRunner:
      environmentVariables: *environmentVariables
      program: scripts/control.sh
      args: [bootstrap, validate]

  - name: server_db_migrate
    label: Upgrade SchemaRegistry Database Schema
    description: Upgrade SchemaRegistry Database Schema. Will skip if schema is up to date.
    expectedExitCodes: [0]
    requiredRoleState: stopped
    commandRunner:
      environmentVariables: *environmentVariables
      program: scripts/control.sh
      args: [bootstrap, migrate]

  - name: server_db_repair
    label: Repair SchemaRegistry Database Schema
    description: Repairs the DATABASE_CHANGE_LOG by removing
      failed migrations and correcting checksum of existing migration script.
    expectedExitCodes: [0]
    requiredRoleState: stopped
    commandRunner:
      environmentVariables: *environmentVariables
      program: scripts/control.sh
      args: [bootstrap, repair]

  - name: server_db_drop
    label: Drop SchemaRegistry Database Tables
    description: Drop all the SchemaRegistry tables.
    expectedExitCodes: [0]
    requiredRoleState: stopped
    commandRunner:
      environmentVariables: *environmentVariables
      program: scripts/control.sh
      args: [bootstrap, drop]

  topology:
    minInstances: 1

  logging:
    dir: /var/log/hwx-registry
    filename: server.log
    modifiable: false
    loggingType: log4j

  parameters:
  - name: registry_home
    configName: registry_home
    label: Schema Registry home
    description: The home directory for registry
    required: true
    type: path
    pathType: localDataDir
    mode: "0750"
    default: /var/lib/hwx-registry

  - name: port
    configName: port
    label: Server Port
    description: The port for the SchemaRegistry to listen on.
    required: true
    type: port
    min: 1024
    default: 24443

  - name: storage_provider
    label: Storage Provider
    description: The type of storage provider
    required: true
    type: string_enum
    validValues: [InMemory, MySQL, PostgreSQL, Oracle]
    default: InMemory

  - name: storage_provider_db_hostname
    label: Storage Provider DataSource Host
    description: The hostname of the datasource
    required: true
    configurableInWizard: true
    type: uri
    default: localhost

  - name: storage_provider_db_port
    label: Storage Provider Database Port
    description: The database port number. The default (0) uses the driver's default port.
    required: true
    configurableInWizard: true
    type: port
    outbound: true
    zeroAllowed: true
    default: 0

  - name: storage_provider_db_name
    label: Storage Provider Database Name
    description: The name of the database for schema_registry
    required: true
    configurableInWizard: true
    type: string
    default: schema_registry

  - name: storage_provider_db_user
    label: Storage Provider DataSource User
    description: Username used to login to data source
    required: true
    configurableInWizard: true
    type: string
    default: hwx-registry

  - name: storage_provider_db_password
    label: Storage Provider DataSource Password
    description: Password used for connecting to data source
    required: true
    configurableInWizard: true
    sensitive: true
    type: password

  - name: auth_provider
    label: Authentication Provider
    description: Only simple anonymous access is tested at the moment.
    required: true
    configurableInWizard: false
    type: string_enum
    validValues: [simple, kerberos]
    default: simple

  - name: auth_provider_simple_anonymous
    label: Authentication Provider Simple Anonymous Access
    description: Whether to support allow anonymous access when using `simple`
      mode.
    required: true
    type: boolean
    default: true

  - name: auth_provider_krb_rules
    label: Authentication Provider Kerberos UserMapping Rules.
    description: 'Rules for mapping Kerberos Principal to Unix user names.
      RULE:[num_of_components:format](match)s/from_pattern/to_pattern>/[g][/L]
      It is a 3-step process. First, map user/instance@realm into $1/$2@$0.
      Second, map [$0,$1,$2] to format. Third, apply the match regex to format, if
      it matches, then the resulting name is given by to_pattern and turned into
      lowercase if /L is present.
      Examples:
      <ul><li>RULE:[2:$1@$0]([jt]t@.*EXAMPLE.COM)s/.*/yarn/</li><li>RULE:[2:$1@$0]([nd]n@.*EXAMPLE.COM)s/.*/hdfs/<li></ul>'
    required: true
    type: string_array
    separator: ' '
    conformRegex: '\\s*((DEFAULT)|(RULE:\\[(\\d*):([^\\]]*)](\\(([^)]*)\\))?(s/([^/]*)/([^/]*)/(g)?)?))/?(L)?'
    default:
    - DEFAULT

  - name: pki_truststore_password
    configName: TRUSTSTORE_PASSWORD
    label: Node TLS Certificate Trust Store Password
    description: The password for the Node TLS/SSL Certificate Trust Store File.
    required: true
    type: string
    initType: randomBase64
  - name: pki_keystore_password
    configName: KEYSTORE_PASSWORD
    label: Node TLS Server JKS Keystore File Password
    description: The password for the Node JKS keystore file.
    required: true
    type: string
    initType: randomBase64
  - name: csr_hosts
    configName: CSR_SAN
    label: CSR Subject Alternate Name
    description: The Schema Registry Subject Alternative Names.
    required: false
    type: uri_array
    separator: '","'
    default:
  - name: csr_name_org_unit
    configName: CSR_OUS
    label: CSR X.509 Additional Organizational Units
    description: The X.509 attributes for the certificate, i.e.
      country(C), state or province(S), locality(L), organization(O),
      organizational unit(OU), and the common name(CN). All fields are
      optional, but if a CN is not defined, then it will default to
      the machine's hostname.
    type: string_array
    separator: '"},{"OU":"'
    minLength: 1
    default:
    - Schema Registry

  - name: jvm_heap_size
    configName: jvm.heap.size
    label: Java Maximum(and Initial) heap size
    description: Java's heap size set using -Xmx and -Xms
    required: true
    type: memory
    unit: megabytes
    scaleFactor: 1.3
    autoConfigShare: 100
    softMin: 512
    default: 512

  - name: jvm_options
    configName: jvm.options
    label: Java Performance Options
    description: Java performance options.
    required: true
    type: string_array
    separator: ' '
    default:
    - -server
    - -XX:+UseParNewGC
    - -XX:+UseConcMarkSweepGC
    - -XX:+CMSClassUnloadingEnabled
    - -XX:+CMSScavengeBeforeRemark
    - -XX:+DisableExplicitGC
    - -Djava.awt.headless=true

  configWriter:
    auxConfigGenerators:
    - filename: jaas.envsubst.conf
      sourceFilename: aux/jaas.envsubst.conf
    - filename: registry-s.envsubst.yaml
      sourceFilename: aux/registry-s.envsubst.yaml
    - filename: registry-sf.envsubst.yaml
      sourceFilename: aux/registry-sf.envsubst.yaml
    - filename: registry.envsubst.yaml
      sourceFilename: aux/registry.envsubst.yaml

    generators:
    - filename: pki-conf/client-csr.vars
      configFormat: properties
      includedParams:
      - csr_hosts
      - csr_name_org_unit
      - pki_keystore_password
      - pki_truststore_password
      additionalConfigs:
      - key: CSR_CN
        value: "${host}"
      - key: CSR_KEY_ALGO
        value: rsa
      - key: CSR_KEY_SIZE
        value: 4096
      - key: KEYSTORE_LOCATION
        value: 'keystore.jks'
      - key: TRUSTSTORE_LOCATION
        value: 'truststore.jks'


#gateway:
#  alternatives:
#    name: tls-conf
#    priority: 50
#    linkRoot: /etc/hwx-registry
#  scriptRunner:
#    program: scripts/cc.sh
#    args: [deploy]
#  configWriter:
#    auxConfigGenerators:
#    - filename: tls-conf/client.sh
#      sourceFilename: scripts/client.sh
#    generators:
#    - filename: tls-conf/tls-service.hadoop_xml
#      configFormat: hadoop_xml
#      includedParams: [ ]
#      additionalConfigs:
#      - {key: days, value: '1095'}
#      - {key: keySize, value: '2048'}
#      - {key: keyPairAlgorithm, value: RSA}
#      - {key: signingAlgorithm, value: SHA256WITHRSA}
#      - {key: keyStoreType, value: jks}
#      - {key: caHostname, value: '@@CA_HOSTNAME@@'}
#      - {key: port, value: '@@CA_PORT@@'}
#      - {key: reorderDn, value: true}
#    peerConfigGenerators:
#    - roleName: HWX_REGISTRY_SERVER
#      filename: tls-conf/tls-service.properties
#      params: [tls_port]
